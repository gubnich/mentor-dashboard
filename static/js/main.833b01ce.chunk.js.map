{"version":3,"sources":["firebase.js","components/Tasks.js","components/Mark.js","components/Students.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","provider","auth","GithubAuthProvider","addScope","fb","signInWithPopup","Tasks","props","data","tasks","react_default","a","createElement","className","names","map","item","i","link","links","key","data-type","href","Mark","status","mark","title","comment","Students","mentor","console","log","statuses","students","mentors","Object","keys","gitHubLink","score","linkPR","components_Mark","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","login","state","user","options","currentMentor","localStorage","mentorLogin","_this2","fetch","then","response","json","option","value","label","setState","_this3","_ref","concat","providerData","uid","toLowerCase","sessionStorage","setItem","undefined","session","react_select_esm","onChange","defaultValue","setDefaultMentor","theme","objectSpread","borderRadius","colors","primary50","primary","neutral0","components_Tasks","components_Students","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.833b01ce.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyC4hg8iF0GYzvmMB9OolQjrT6S5sNO2Mq0\",\r\n  authDomain: \"mentor-dashboard-8e6f3.firebaseapp.com\",\r\n  databaseURL: \"https://mentor-dashboard-8e6f3.firebaseio.com\",\r\n  projectId: \"mentor-dashboard-8e6f3\",\r\n  storageBucket: \"mentor-dashboard-8e6f3.appspot.com\",\r\n  messagingSenderId: \"1070646049854\"\r\n};\r\nconst fire = firebase.initializeApp(config);\r\nconst provider = new firebase.auth.GithubAuthProvider();\r\nprovider.addScope('read:user');\r\n/*\r\nfire.auth().signInWithPopup(provider).then(function(result) {\r\n  // This gives you a GitHub Access Token. You can use it to access the GitHub API.\r\n  var token = result.credential.accessToken;//eslint-disable-line\r\n  // The signed-in user info.\r\n  var user = result.user;//eslint-disable-line\r\n  // ...\r\n}).catch(function(error) {\r\n  // Handle Errors here.\r\n  var errorCode = error.code;//eslint-disable-line\r\n  var errorMessage = error.message;//eslint-disable-line\r\n  // The email of the user's account used.\r\n  var email = error.email;//eslint-disable-line\r\n  // The firebase.auth.AuthCredential type that was used.\r\n  var credential = error.credential;//eslint-disable-line\r\n  // ...\r\n});\r\n*/\r\nexport const fb = {\r\n  login: () => fire.auth().signInWithPopup(provider)\r\n}\r\n","import React from 'react';\r\n\r\nfunction Tasks(props) {\r\n  if(props.data) {\r\n    const tasks = props.data.tasks;\r\n    return (\r\n      <ul className=\"tasksList\">\r\n        <li className=\"emptyCell\"></li>\r\n        {tasks.names.map((item, i) => {\r\n          const link = tasks.links[i] ? tasks.links[i] : null;\r\n          return <li key={i}><a data-type={link ? \"yes\" : \"no\"} href={tasks.links[i]}>{item}</a></li>\r\n        })}\r\n        \r\n      </ul>\r\n    );\r\n  } else {\r\n    return <ul></ul>;\r\n  }\r\n}\r\n\r\nexport default Tasks;\r\n","import React from 'react';\r\n\r\nfunction Mark(props) {\r\n  let className;\r\n  switch (true) {\r\n    case (props.status === 'In Progress'): className = 'statusInProgress'; break;\r\n    case (props.mark !== null): className = 'statusDone'; break;\r\n    case (props.status === 'Checked'): className = 'statusChecked'; break;\r\n    case (props.status === 'Checking'): className = 'statusChecking'; break;\r\n    default: className = 'statusToDo'; break;\r\n  }\r\n  return (\r\n    <li className={className}><a href={props.link} title={props.comment}>{ props.mark }</a></li>\r\n  )\r\n}\r\n\r\nexport default Mark;\r\n","import React from 'react';\r\nimport Mark from './Mark';\r\n\r\nfunction Students(props) {\r\n  if(props.data && props.mentor) {console.log(props.data.tasks.statuses);\r\n    const students = props.data.mentors[props.mentor].students;\r\n    const statuses = props.data.tasks.statuses;\r\n\r\n    return (\r\n      <ul className=\"studentsList\">\r\n        { Object.keys(students).map((item, i) => {\r\n          return (\r\n            <li className=\"student\" key={i}>\r\n              <a href={students[item].gitHubLink} className=\"studentName\">{item}</a>\r\n              <ul className=\"studentMarks\">\r\n                {students[item].score.map((item, i) => {\r\n                  let mark = item ? item.mark : null;\r\n                  let link =  item ? item.linkPR : null;\r\n                  let comment =  item ? item.comment : null;\r\n                  return <Mark mark={mark} status={statuses[i]} key={i} link={link} comment={comment} />\r\n                  // else return <li key={i}></li>\r\n                })}\r\n              </ul>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    )\r\n  }\r\n  else return <ul></ul>;\r\n}\r\n\r\nexport default Students;\r\n","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport './App.css';\r\nimport './vendor/button.css';\r\nimport { fb } from './firebase';\r\nimport Tasks from './components/Tasks';\r\nimport Students from './components/Students';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.state = {\r\n      user: '',\r\n      data: null,\r\n      options: [],\r\n      currentMentor: localStorage.mentorLogin,\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    fetch('./school.json')\r\n      .then(response => {                \r\n        return response.json()\r\n      })\r\n      .then(data => {\r\n        console.log('data', data);\r\n        const option = Object.keys(data.mentors).map(item => {\r\n          return {value: item, label: item};\r\n        })\r\n        this.setState({ data: data , options: option})\r\n      }\r\n    );\r\n  }\r\n  // getGithubName(id) {\r\n    \r\n  // }\r\n  login() {\r\n    fb.login().then(({ user }) => {\r\n      fetch(`https://api.github.com/user/${user.providerData[0].uid}`)\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(response => {\r\n          const user = response.login.toLowerCase();\r\n          sessionStorage.setItem('session', user);\r\n          if (this.state.data.mentors[user]) {\r\n            localStorage.setItem('mentorLogin', user);\r\n            this.setState({ user : user, currentMentor: localStorage.mentorLogin });\r\n          } else {\r\n            this.setState({ user : user, currentMentor: undefined });\r\n          }\r\n          \r\n          console.log(response);\r\n        })\r\n    })\r\n  }\r\n  handleChange(value){\r\n    console.log(value.value);\r\n    localStorage.setItem('mentorLogin', value.value);\r\n    this.setState({ currentMentor : value.value });\r\n  }\r\n  setDefaultMentor() {\r\n    const option = {\r\n      value: this.state.currentMentor,\r\n      label: this.state.currentMentor\r\n    };\r\n    return this.state.currentMentor ? option : undefined;\r\n  }\r\n  generateValue() {\r\n    const option = {\r\n      value: this.state.currentMentor,\r\n      label: this.state.currentMentor\r\n    };\r\n    return option;\r\n  }\r\n  render() {console.log(this.state.currentMentor, this.state.user);\r\n    if (sessionStorage.session) {\r\n      return (\r\n      <div className=\"app\">\r\n        <header className=\"appHeader\">\r\n          <Select options={this.state.options} \r\n                  onChange={this.handleChange}\r\n                  // placeholder={''}\r\n                  defaultValue={this.setDefaultMentor()}\r\n                  theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 0,\r\n                    colors: {\r\n                    ...theme.colors,\r\n                    primary50: '#B9C1D4',\r\n                    primary: '#6477A0',\r\n                    neutral0: '#ECEEF3'\r\n                    },\r\n                  })}\r\n                  />\r\n        </header>\r\n        <section className=\"appBody\">\r\n          <Tasks data={this.state.data} />\r\n          <Students data={this.state.data} mentor={this.state.currentMentor}/>\r\n        </section>\r\n      </div>)\r\n    } else {\r\n      return (\r\n      <div className=\"app\">\r\n        <div className=\"entrance\">\r\n       \r\n    <div className=\"btn\" onClick={this.login}><span>Login</span></div>\r\n        <ul className=\"fileLinks\">\r\n          <li>\r\n            <a href=\"https://docs.google.com/spreadsheets/d/1-HYzpnEYpIsv5qSSuSZCgKf5-mYnG0T3Xt864Hhdnew/edit?usp=drive_open&ouid=0\">Pairs</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://docs.google.com/spreadsheets/d/1uojrkWfoLh9oTKxLWCdirrNJYGVfCtiF9RlZrwsxSbo/edit#gid=0\">Tasks</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://docs.google.com/spreadsheets/d/18exMEOWGKsMPggt0t3yU-MR1gvX3OFBDqKCvdNy8rAU/edit#gid=104739544\">Scores</a>\r\n          </li>\r\n        </ul>\r\n        </div>\r\n      </div>);\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}